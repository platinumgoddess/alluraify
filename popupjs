let currentProduct = null;

document.addEventListener("DOMContentLoaded", async () => {
  const saveBtn = document.getElementById("saveProductBtn");
  const shareBtn = document.getElementById("shareBtn");
  const savedToggle = document.getElementById("savedProductsToggle");
  const savedSection = document.getElementById("savedProductsSection");
  const priceCompareToggle = document.getElementById("priceCompareToggle");
  const priceCompareSection = document.getElementById("priceComparison");
  const dupeFinderToggle = document.getElementById("dupeToggle");
  const dupeFinderSection = document.getElementById("dupeSection");
  const reviewsToggle = document.getElementById("reviewsToggle");
  const reviewsSection = document.getElementById("reviewsSection");
  const priceList = document.getElementById("priceList");

  
  function toggleSection(section, toggleElem) {
    if (section.style.display === "none" || !section.style.display) {
      section.style.display = "block";
      toggleElem.querySelector(".arrow").style.transform = "rotate(90deg)";
    } else {
      section.style.display = "none";
      toggleElem.querySelector(".arrow").style.transform = "rotate(0deg)";
    }
  }

  priceCompareToggle.addEventListener("click", () => toggleSection(priceCompareSection, priceCompareToggle));
  dupeFinderToggle.addEventListener("click", () => toggleSection(dupeFinderSection, dupeFinderToggle));
  reviewsToggle.addEventListener("click", () => toggleSection(reviewsSection, reviewsToggle));
  savedToggle.addEventListener("click", () => toggleSection(savedSection, savedToggle));

  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });
  if (!tab) return;

 chrome.tabs.sendMessage(tab.id, { action: "getProductInfo" }, (data) => {
  if (!data) {
    console.error("No product data received.");
    return;
  }

  currentProduct = data;

  document.getElementById("productTitle").innerText = data.title || "No title";
  document.getElementById("productBrand").innerText = data.brand || "No brand";
  document.getElementById("price").innerText = data.price || "No price";

  // ... your rating & image code ...

  // Use matched price data sent from content.js
  const priceData = data.priceData || {};

 let priceInfo = priceData;

if (!priceInfo || Object.keys(priceInfo).length === 0) {
  priceInfo = { mecca: null, sephora: null, farmers: null, spacenk: null };
}


 const stores = [
  {
    name: "mecca",
    logo: "images/meccalogo.png",
    price: priceInfo.mecca?.price,
    url: priceInfo.mecca?.url,
  },
  {
    name: "sephora",
    logo: "images/sephoralogo.png",
    price: priceInfo.sephora?.price,
    url: priceInfo.sephora?.url,
  },
  {
    name: "farmers",
    logo: "images/farmers.png",
    price: priceInfo.farmers?.price,
    url: priceInfo.farmers?.url,
  },
  {
    name: "spacenk",
    logo: "images/spacenk.png",
    price: priceInfo.spacenk?.price,
    url: priceInfo.spacenk?.url,
  },
];


  function createPriceCard(store) {
  const priceText = store.price || "Not available";

  // Only show "Shop Now" link if both price and url exist and are not null
  const shopNowLink =
    store.price && store.url
      ? `<a class="shop-now" href="${store.url}" target="_blank" rel="noopener noreferrer">Shop Now</a>`
      : `<span class="shop-now disabled">Not available</span>`;

  return `
    <li class="price-card">
      <div class="store-logo">
        <img src="${store.logo}" alt="${store.name} Logo" style="width:36px; height:36px; border-radius:8px;" />
      </div>
      <div class="price-info">
        <span class="store-name">On ${store.name}</span>
        <span class="store-price">${priceText}</span>
        ${shopNowLink}
      </div>
    </li>
  `;
}



  priceList.innerHTML = stores.map(createPriceCard).join("");

  // ... rest of your code ...


    // -------------------------------------------------------

    refreshSavedProducts();

    chrome.storage.local.get(["savedProducts"], (res) => {
      const saved = res.savedProducts || [];
      const isSaved = saved.some(p => p.title === currentProduct.title);
      updateSaveButtonState(saveBtn, isSaved);
    });
  });

  saveBtn.addEventListener("click", () => {
    if (!currentProduct) return;
    chrome.storage.local.get(["savedProducts"], (res) => {
      let saved = res.savedProducts || [];
      const index = saved.findIndex(p => p.title === currentProduct.title);

      if (index !== -1) {
        saved.splice(index, 1);
        chrome.storage.local.set({ savedProducts: saved }, () => {
          updateSaveButtonState(saveBtn, false);
          refreshSavedProducts();
        });
      } else {
        saved.push(currentProduct);
        chrome.storage.local.set({ savedProducts: saved }, () => {
          updateSaveButtonState(saveBtn, true);
          refreshSavedProducts();
        });
      }
    });
  });

  shareBtn.addEventListener("click", () => {
    if (!currentProduct?.url) return;
    const originalText = shareBtn.textContent;
    navigator.clipboard.writeText(currentProduct.url).then(() => {
      shareBtn.textContent = "Copied!";
      shareBtn.disabled = true;
      setTimeout(() => {
        shareBtn.textContent = originalText;
        shareBtn.disabled = false;
      }, 2000);
    }).catch(() => {
      shareBtn.textContent = "Failed to copy";
      setTimeout(() => {
        shareBtn.textContent = originalText;
      }, 2000);
    });
  });

  function refreshSavedProducts() {
    chrome.storage.local.get(["savedProducts"], (res) => {
      const saved = res.savedProducts || [];
      const list = document.getElementById("savedList");
      list.innerHTML = "";
      if (saved.length === 0) {
        list.innerHTML = "<li>No saved products.</li>";
        return;
      }
      saved.forEach((prod, idx) => {
        const li = document.createElement("li");
        li.className = "saved-item";

        const img = document.createElement("img");
        img.className = "saved-img";
        img.src = prod.image || "placeholder.jpg";
        img.alt = prod.title || "Saved product";

        const info = document.createElement("div");
        info.className = "saved-info";

        const title = document.createElement("a");
        title.className = "saved-title";
        title.textContent = prod.title || "Untitled";
        title.href = prod.url || "#";
        title.target = "_blank";
        title.rel = "noopener noreferrer";

        const price = document.createElement("div");
        price.className = "saved-price";
        price.textContent = prod.price || "No price";

        const removeBtn = document.createElement("button");
        removeBtn.className = "saved-remove";
        removeBtn.innerHTML = "&times;";
        removeBtn.title = "Remove";
        removeBtn.addEventListener("click", () => {
          saved.splice(idx, 1);
          chrome.storage.local.set({ savedProducts: saved }, () => {
            refreshSavedProducts();
            if (currentProduct && prod.title === currentProduct.title) {
              updateSaveButtonState(saveBtn, false);
            }
          });
        });

        info.appendChild(title);
        info.appendChild(price);
        li.appendChild(img);
        li.appendChild(info);
        li.appendChild(removeBtn);
        list.appendChild(li);
      });
    });
  }

  function updateSaveButtonState(button, isSaved) {
    if (isSaved) {
      button.textContent = "Saved ✔️";
      button.classList.add("saved");
    } else {
      button.textContent = "Save to Beaura";
      button.classList.remove("saved");
    }
    button.disabled = false;
  }
});
